/* Styleguide */
/* \Styleguide */
/*
*
* FONT SIZES
* 
*/
/*
p {
  @include font-size(14px)
}
 */
/**
 *
 * USER SELECT
 * 
 */
html {
  height: 100%;
  overflow: auto;
}

body {
  height: 100%;
}

.light-background {
  background-color: #f1f0f0;
}

.de-emphasize {
  font-weight: 400;
}

.loading {
  -webkit-animation: rotate 1s linear infinite;
  -moz-animation: rotate 1s linear infinite;
  animation: rotate 1s linear infinite;
}

@-webkit-keyframes rotate {
  from {
    -webkit-transform: rotate(0);
    -webkit-transform-origin: 100% 100%;
  }
  to {
    -webkit-transform: rotate(360deg);
    -webkit-transform-origin: 100% 100%;
  }
}

@-moz-keyframes rotate {
  from {
    -moz-transform: rotate(0);
    -moz-transform-origin: 100% 100%;
  }
  to {
    -moz-transform: rotate(360deg);
    -moz-transform-origin: 100% 100%;
  }
}

@keyframes rotate {
  from {
    -webkit-transform: rotate(0);
    -moz-transform: rotate(0);
    -ms-transform: rotate(0);
    -o-transform: rotate(0);
    transform: rotate(0);
    -webkit-transform-origin: 100% 100%;
    -moz-transform-origin: 100% 100%;
    -ms-transform-origin: 100% 100%;
    -o-transform-origin: 100% 100%;
    transform-origin: 100% 100%;
  }
  to {
    -webkit-transform: rotate(360deg);
    -moz-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
    -webkit-transform-origin: 100% 100%;
    -moz-transform-origin: 100% 100%;
    -ms-transform-origin: 100% 100%;
    -o-transform-origin: 100% 100%;
    transform-origin: 100% 100%;
  }
}

.transition-enter {
  opacity: 0.01;
}

.transition-enter.transition-enter-active {
  opacity: 1;
  transition: opacity 500ms ease-in;
}

.transition-leave {
  opacity: 1;
}

.transition-leave.transition-leave-active {
  opacity: 0.01;
  transition: opacity 300ms ease-in;
}

@media screen and (max-width: 48em) {
  .floatnone__xs {
    clear: both;
  }
}

@media screen and (min-width: 48em) and (max-width: 62em) {
  .floatnone__sm {
    clear: both;
  }
}

@media screen and (min-width: 62em) and (max-width: 75em) {
  .floatnone__md {
    clear: both;
  }
}

@media screen and (min-width: 75em) {
  .floatnone__lg {
    clear: both;
  }
}

.btn {
  border-radius: 0;
}

.cta {
  display: inline-block;
  font-size: 14px;
  font-size: 1.4rem;
  border: none;
  padding: 8px 20px;
  -webkit-transition: all 0.3s ease;
  -moz-transition: all 0.3s ease;
  transition: all 0.3s ease;
}

.cta i {
  margin-right: 10px;
}

.cta:disabled, .cta:disabled:hover {
  opacity: 0.5 !important;
}

.cta.primary {
  color: white;
  background-color: #83ae03;
}

.cta.primary.outline {
  color: #83ae03;
  border-color: #83ae03;
}

.cta.primary.outline:hover {
  background-color: #83ae03;
  color: white;
}

.cta.primary.no-bg {
  color: #83ae03;
  border-color: #83ae03;
}

.cta.primary:hover {
  opacity: 0.8;
  text-decoration: none;
}

.cta.secundary {
  color: white;
  background-color: #aec03f;
}

.cta.secundary.outline {
  border-color: #aec03f;
}

.cta.secundary.no-bg {
  color: #aec03f;
  border-color: #aec03f;
}

.cta.white {
  color: #6a696a;
  background-color: white;
}

.cta.white.outline {
  color: white;
  border-color: white;
}

.cta.white.outline:hover {
  background-color: white;
  color: #6a696a;
}

.cta.white.no-bg {
  color: white;
  border-color: white;
}

.cta.white:hover {
  opacity: 0.8;
  text-decoration: none;
}

.cta.no-bg {
  background: none;
  color: #83ae03;
}

.cta.no-bg:hover {
  text-decoration: underline !important;
}

.cta.small {
  font-size: 0.875em;
  padding: 5px 10px;
}

.cta.outline {
  background: none;
  border: 1px solid;
}

.cta:hover, .cta:active, .cta:focus {
  text-decoration: none;
}

.protected-button {
  width: 100%;
}

.protected-button button {
  padding: 0;
  margin: 0;
  background: none;
  border: none;
  display: block;
  text-align: left;
}

.protected-button button:active, .protected-button button:focus {
  outline: none;
}

.protected-button button:not(.cta) {
  width: 100%;
}

h1, h2, h3, h4, h5, h6 {
  font-family: "Lato", sans-serif;
  font-weight: bold;
}

h1 {
  font-size: 32px;
  font-size: 3.2rem;
}

h2 {
  font-size: 28px;
  font-size: 2.8rem;
}

h3 {
  font-size: 24px;
  font-size: 2.4rem;
}

h4 {
  font-size: 22px;
  font-size: 2.2rem;
}

h5 {
  font-size: 20px;
  font-size: 2rem;
}

h6 {
  font-size: 18px;
  font-size: 1.8rem;
}

.navbar {
  background: none;
  border: none;
  max-height: auto;
}

.navbar .menu-container {
  padding-top: 10px;
}

@media screen and (max-width: 48em) {
  .navbar .menu-container {
    float: none !important;
  }
}

.navbar .navbar-nav {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  text-align: right;
}

.navbar .navbar-nav button {
  padding: 0;
  background: none;
  border: none;
}

.navbar .navbar-nav li {
  float: none;
  display: inline-block;
}

@media screen and (max-width: 48em) {
  .navbar .navbar-nav li {
    display: block;
    text-align: left;
  }
  .navbar .navbar-nav li button {
    display: block;
  }
  .navbar .navbar-nav li a,
  .navbar .navbar-nav li button {
    margin: 0 20px;
  }
}

.navbar .navbar-nav a, .navbar .navbar-nav button {
  padding: 5px 0;
  color: white !important;
  -webkit-transition: all 0.3s ease;
  -moz-transition: all 0.3s ease;
  transition: all 0.3s ease;
  border-bottom: 2px solid transparent;
}

.navbar .navbar-nav a:hover, .navbar .navbar-nav a:focus, .navbar .navbar-nav a:active, .navbar .navbar-nav button:hover, .navbar .navbar-nav button:focus, .navbar .navbar-nav button:active {
  border-bottom: 2px solid #aec03f;
  background: none !important;
}

.navbar .navbar-nav .active a, .navbar .navbar-nav .active button {
  background: none;
  border-bottom: 2px solid #aec03f;
}

.navbar .big-nav,
.navbar .small-nav {
  float: none;
  color: white;
}

.navbar .small-nav {
  font-size: 0.875em;
}

@media screen and (min-width: 48em) {
  .navbar .small-nav li + li {
    margin-left: 10px;
  }
}

@media screen and (min-width: 48em) {
  .navbar .small-nav li + li a {
    /* &:before{
						content:"|";
						padding-right:10px;
					} */
  }
}

.navbar .big-nav {
  font-size: 1.125em;
}

@media screen and (min-width: 48em) {
  .navbar .big-nav li + li a, .navbar .big-nav li + li button {
    margin-left: 20px;
  }
}

.navbar-brand {
  display: block;
  height: auto;
}

.navbar-brand img {
  display: block;
  max-height: 60px;
}

.navbar-default .navbar-toggle {
  border: none;
  border-radius: 0;
}

.header-container.home-page .navbar-default .icon-bar {
  background-color: white !important;
}

.header-container.home-page .navbar-default .navbar-toggle:hover, .header-container.home-page .navbar-default .navbar-toggle:focus {
  background-color: white;
}

.header-container.home-page .navbar-default .navbar-toggle:hover .icon-bar, .header-container.home-page .navbar-default .navbar-toggle:focus .icon-bar {
  background-color: #888 !important;
}

footer .bottom-nav {
  background-color: #aec03f;
  padding: 30px 0;
}

footer .bottom-nav ul {
  margin: 0 0 0 30px;
  padding: 0;
  list-style: none;
  display: inline-block;
  line-height: 2;
}

footer .bottom-nav ul li {
  display: inline-block;
}

footer .bottom-nav ul li + li {
  margin-left: 20px;
}

footer .bottom-nav ul a {
  color: white;
  font-family: "Lato", sans-serif;
  font-size: 16px;
  font-size: 1.6rem;
}

@media screen and (max-width: 48em) {
  footer .bottom-nav ul {
    text-align: center;
    display: block;
    margin: 0 0 20px;
  }
}

footer .bottom-nav button {
  margin-right: 30px;
}

@media screen and (max-width: 48em) {
  footer .bottom-nav button {
    float: none !important;
    display: block;
    margin: 0 auto;
  }
}

footer .copyright {
  text-align: center;
  background-color: #1b1b1b;
  color: white;
  padding: 10px 0;
  font-size: 12px;
  font-size: 1.2rem;
  line-height: 1.2;
}

.app-carousel .media {
  color: white;
  margin-top: 20px;
  margin-bottom: 40px;
}

.app-carousel .media h1 {
  font-family: "Open Sans", sans-serif;
}

.app-carousel .media a {
  color: white;
  -webkit-transition: all 0.3s ease;
  -moz-transition: all 0.3s ease;
  transition: all 0.3s ease;
}

.app-carousel .media a:hover {
  color: #aec03f;
  text-decoration: none;
}

@media screen and (max-width: 48em) {
  .app-carousel .media__img {
    display: block;
    text-align: center;
  }
  .app-carousel .media__img a {
    margin: 0 auto;
  }
}

.app-carousel .cta {
  margin-top: 10px;
}

.app-carousel .carousel-control {
  background: none !important;
}

.app-carousel .carousel-control i {
  position: absolute;
  top: 50%;
}

.app-carousel__img {
  display: block;
  width: 200px;
  height: 200px;
  overflow: hidden;
  border-radius: 50%;
  margin-right: 20px;
}

@media screen and (max-width: 48em) {
  .app-carousel__img {
    width: 100px;
    height: 100px;
  }
}

.app-carousel__text {
  font-family: "Open Sans", sans-serif;
  font-size: 1em;
  line-height: 1.5;
  margin-top: 20px;
}

.search-form {
  width: 100%;
  margin-bottom: 40px;
}

.search-form input,
.search-form select,
.search-form button {
  height: 45px;
  width: 100%;
  margin-bottom: 10px !important;
}

@media screen and (max-width: 75em) {
  .search-container .cta i {
    display: none;
  }
}

.header-container:not(.home-page) + .search-container {
  background-color: #f1f0f0;
}

.header-container:not(.home-page) + .search-container .search-form {
  margin: 30px 0;
}

.header-container:not(.home-page) + .search-container .search-form input,
.header-container:not(.home-page) + .search-container .search-form button,
.header-container:not(.home-page) + .search-container .search-form select {
  margin-bottom: 0 !important;
}

.single-search {
  margin: 0 auto;
  text-align: center;
  margin-bottom: 30px;
}

.single-search input[type='text'] {
  width: auto;
  border-radius: 0;
  height: 36px;
}

.single-search .form-control {
  float: none;
}

@media screen and (max-width: 62em) {
  .single-search {
    margin-top: 30px;
  }
  .single-search input[type='text'] {
    max-width: 160px;
  }
}

.formats {
  background-color: #aec03f;
  text-align: center;
}

.formats img {
  max-height: 50px;
  margin: 0 auto 20px;
}

.formats span {
  font-family: "Lato", sans-serif;
  font-size: 1.25em;
  color: white;
}

.formats a {
  display: block;
  padding: 30px 0;
  -webkit-transition: all 0.3s ease;
  -moz-transition: all 0.3s ease;
  transition: all 0.3s ease;
}

.formats a:hover {
  text-decoration: none;
  opacity: 0.5;
}

.block__explore {
  width: 100%;
}

.block__contribute {
  background-color: #55974d;
  color: white;
  text-align: center;
}

.block__contribute h1 {
  margin-top: 60px;
}

.block__contribute h2 {
  margin: 60px 0 30px;
}

.block__contribute .svg-element {
  height: 60px;
  margin-bottom: 30px;
}

.block__contribute p {
  margin-bottom: 30px;
  font-size: 14px;
  font-size: 1.4rem;
  line-height: 2;
  font-family: "Open Sans", sans-serif;
}

.block__contribute--col {
  margin-bottom: 60px;
}

.block__side {
  height: 300px;
  width: 50%;
}

@media screen and (max-width: 48em) {
  .block__side {
    width: 100%;
  }
}

.block__side--left {
  float: left;
}

.block__side--right {
  float: right;
  background-color: white;
}

.block__side--text {
  padding: 20px 40px;
}

.block__side--text span {
  display: inline-block;
  margin: 20px 0;
  line-height: 1.5;
  font-family: "Open Sans", sans-serif;
  font-size: 1em;
  color: #51504f;
}

[class^='block'] .bg-container {
  height: 100%;
  background-size: cover;
  background-position: center center;
}

.breadcrumbs {
  padding: 20px 0 0;
  font-family: "Lato", sans-serif;
  font-size: 14px;
  font-size: 1.4rem;
}

.breadcrumbs span,
.breadcrumbs a {
  color: #6a696a;
}

.header-container:not(.detalhes-recurso) + .breadcrumbs-container {
  background-color: #f1f0f0;
}

.header-container.home-page {
  background-image: url("../graphics/bg/home-bg.jpg");
  background-size: cover;
  background-position: center center;
}

.header-container:not(.home-page) a, .header-container:not(.home-page) button {
  color: #51504f !important;
}

@media screen and (max-width: 48em) {
  .header-container:not(.home-page) + .search-container {
    display: none;
  }
}

.resources__filter {
  margin-top: 30px;
}

.resources__filter .collapse-container {
  margin-bottom: 20px;
}

.resources__filter form input[type="checkbox"] + label,
.resources__filter form input[type="radio"] + label {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.resources__filter button {
  display: block;
  width: 100%;
  background: none;
  border: none;
  border-bottom: 1px solid #b4b4b4;
  text-align: left;
  padding: 0;
  padding-bottom: 5px;
  margin-bottom: 10px;
  color: #6a696a;
}

.resources__filter button i {
  float: right;
  margin-top: 5px;
}

.resources__filter label {
  font-family: "Open Sans", sans-serif;
  font-weight: 400;
  font-size: 14px;
  font-size: 1.4rem;
  padding-left: 10px;
  padding-right: 15px;
}

@media screen and (max-width: 62em) {
  .resources__filter + section {
    text-align: center;
    margin: 0 auto;
  }
}

.ordering {
  text-align: right;
}

.ordering select {
  width: auto;
  border-radius: 0 !important;
  display: inline-block;
}

.ordering label {
  padding-right: 10px;
}

/* Base for label styling */
[type="checkbox"]:not(:checked),
[type="checkbox"]:checked {
  position: absolute;
  left: -9999px;
}

[type="checkbox"]:not(:checked) + label,
[type="checkbox"]:checked + label {
  position: relative;
  padding-left: 25px;
  cursor: pointer;
}

/* checkbox aspect */
[type="checkbox"]:not(:checked) + label:before,
[type="checkbox"]:checked + label:before {
  content: '';
  position: absolute;
  left: 0;
  top: 2px;
  width: 17px;
  height: 17px;
  border: 1px solid #55974d;
  border-radius: 0;
}

/* checked mark aspect */
[type="checkbox"]:not(:checked) + label:after,
[type="checkbox"]:checked + label:after {
  content: "\f00c";
  font-family: "FontAwesome";
  position: absolute;
  top: 6px;
  left: 2px;
  font-size: 13px;
  line-height: 0.8;
  transition: all .2s;
  color: #55974d;
}

/* checked mark aspect changes */
[type="checkbox"]:not(:checked) + label:after {
  opacity: 0;
}

[type="checkbox"]:checked + label:after {
  opacity: 1;
}

/* disabled checkbox */
[type="checkbox"]:disabled:not(:checked) + label:before,
[type="checkbox"]:disabled:checked + label:before {
  box-shadow: none;
  border-color: #55974d;
  background-color: #ddd;
}

[type="checkbox"]:disabled:checked + label:after {
  color: #999;
}

[type="checkbox"]:disabled + label {
  color: #aaa;
}

/* accessibility */
[type="checkbox"]:checked:focus + label:before,
[type="checkbox"]:not(:checked):focus + label:before {
  border: 2px dotted blue;
}

/* hover style just for information */
label:hover:before {
  border: 1px solid #55974d !important;
}

.login-form {
  max-width: 300px;
  margin: 0 auto;
}

.login-form input {
  padding: 5px 10px;
  border-radius: 0;
}

.login-form button {
  width: 100%;
  margin-bottom: 15px;
}

.comment-form textarea {
  border-radius: 0;
  height: 150px;
}

.resources__recent {
  background-color: #f1f0f0;
  padding: 0 0 60px 0;
}

.resources__title {
  text-align: center;
  margin: 60px 0 60px;
}

.list__element {
  display: block;
  text-decoration: none;
  color: #51504f;
  background-color: white;
  border: 1px solid #b4b4b4;
  padding: 0 25px 20px;
  margin-bottom: 30px;
  -webkit-transition: all 0.3s ease;
  -moz-transition: all 0.3s ease;
  transition: all 0.3s ease;
}

.list__element:hover {
  box-shadow: 0px 10px 30px 0px #A7A7A7;
}

.list__element a:hover, .list__element a:focus, .list__element a:active {
  text-decoration: none;
}

.list__element h1 {
  font-size: 1.25em;
  font-weight: 400;
  color: #1b1b1b;
}

.list__element p {
  line-height: 1.5;
  font-family: "Open Sans", sans-serif;
  font-size: 0.875em;
  color: #51504f;
}

.list__element footer .type {
  width: 30%;
  text-align: right;
}

.list__element footer .type .svg-element {
  height: 16px;
}

.list__element footer .rating,
.list__element footer .type {
  display: inline-block;
}

.list__element footer .rating {
  width: 70%;
}

.rating {
  margin-top: 20px;
  font-size: 1.25em;
  color: #eba600;
}

.rating > span > span {
  margin-right: 5px;
}

.resources__page {
  background-color: #f1f0f0;
}

.scripts-detail {
  background-color: #f1f0f0;
  padding: 60px 0;
}

.scripts-detail .nav-tabs {
  text-align: center;
  border: none;
  margin-bottom: 30px;
}

.scripts-detail .nav-tabs li {
  float: none;
  display: inline-block;
  margin-bottom: 20px;
}

.scripts-detail .nav-tabs li + li {
  margin-left: 20px;
}

.scripts-detail .nav-tabs li.active a {
  cursor: pointer;
  background-color: #83ae03;
  color: #f1f0f0;
}

.scripts-detail .nav-tabs li a {
  border: none;
  background: none;
  padding: 7px 20px;
  border: 1px solid #83ae03;
  border-radius: 0;
  margin-right: 0;
  color: #83ae03;
  -webkit-transition: all 0.3s ease;
  -moz-transition: all 0.3s ease;
  transition: all 0.3s ease;
}

.scripts-detail .nav-tabs li a:hover, .scripts-detail .nav-tabs li a:active, .scripts-detail .nav-tabs li a:focus {
  cursor: pointer;
  background-color: #83ae03;
  color: #f1f0f0;
}

.resource-details {
  margin: 20px 0 0;
}

.resource-details .tech-file {
  margin-bottom: 30px;
}

.resource-details .tech-file h2 {
  margin-bottom: 30px;
}

.resource-details .details-buttons {
  margin-top: 60px;
}

.resource-details .first-details h1 {
  margin-top: 0;
  margin-bottom: 10px;
}

.resource-details .first-details .rating {
  margin: 10px 0;
}

.resource-details p {
  font-family: "Open Sans", sans-serif;
  font-size: 13px;
  font-size: 1.3rem;
}

.comments {
  margin: 60px 0 60px;
}

.comments__children {
  padding-top: 15px;
}

.comments__parent {
  padding-bottom: 15px;
}

.comments__container > .row > div[class^="col"] > .comments__children {
  padding-top: 0;
}

.comments__container h6 {
  margin-bottom: 30px;
  margin-top: 30px;
}

.comments .user-image {
  width: 50px;
  height: 50px;
  background-position: center center;
  background-size: cover;
  border-radius: 50%;
}

.comments .media .meta-info,
.comments .media span,
.comments .media p {
  font-family: "Open Sans", sans-serif;
  font-size: 13px;
  font-size: 1.3rem;
}

.comments .media .meta-info {
  display: block;
  font-style: italic;
  padding-bottom: 5px;
  color: #6a696a;
}

.comments .media .cta {
  padding: 0;
}

.pagination {
  width: 100%;
  background-color: white;
  text-align: center;
  border: 1px solid #b4b4b4;
  border-radius: 0;
}

.pagination li {
  display: inline-block;
}

.pagination li > a, .pagination li > span {
  padding: 20px 20px;
  border: none;
  border-radius: 0;
  color: #6a696a !important;
}

.pagination li.active, .pagination li:hover:not(.disabled) {
  border-top: 2px solid #83ae03;
}

.pagination li.active a, .pagination li.active span, .pagination li:hover:not(.disabled) a, .pagination li:hover:not(.disabled) span {
  background: none !important;
}

.pagination li a:active, .pagination li a:focus, .pagination li span:active, .pagination li span:focus {
  background: none !important;
}

.pagination li:hover {
  cursor: pointer;
}

.modal-backdrop {
  bottom: 0;
}

.login-dialog .modal-header {
  border: none;
}

.login-dialog .modal-header section {
  display: block;
  width: 100px;
  height: 100px;
  font-size: 48px;
  font-size: 4.8rem;
  color: #aec03f;
  text-align: center;
  line-height: 1.9;
  margin: 0 auto;
  border: 2px solid #aec03f;
  border-radius: 50%;
}

.login-dialog .modal-title {
  text-align: center;
  margin-top: 20px;
}

.login-dialog .modal-footer {
  border: none;
  text-align: center;
}

.login-dialog .modal-footer p {
  color: #6a696a;
  font-size: 12px;
  font-size: 1.2rem;
  font-family: "Open Sans", sans-serif;
}

.login-dialog .modal-footer .cta + .cta {
  margin-left: 15px;
}

.login-dialog .modal-footer .cta {
  margin-bottom: 10px;
}

.login-dialog .modal-body {
  max-width: 350px;
  margin: 0 auto;
}

.login-dialog .modal-body p {
  text-align: center;
  font-family: "Open Sans", sans-serif;
  color: #6a696a;
  font-size: 12px;
  font-size: 1.2rem;
}

.login-dialog small {
  font-size: 10px;
  font-size: 1rem;
  color: #b4b4b4;
}

.media-footer {
  margin: 0;
  padding: 0;
  list-style: none;
}

.media-footer li {
  display: inline-block;
}

.media-footer li + li .media__action {
  padding-left: 20px;
}

.media-footer .media__action {
  font-size: 20px;
  font-size: 2rem;
  padding-top: 15px;
  padding-right: 20px;
  padding-bottom: 15px;
}

.media-footer .media__action--main {
  padding-left: 20px;
}

.media-footer .media__action:hover {
  cursor: pointer;
}

.media-footer .media__action--main {
  display: inline-block;
  -webkit-transition: all 0.3s ease;
  -moz-transition: all 0.3s ease;
  transition: all 0.3s ease;
  background-color: #83ae03;
}

.media-footer .media__action--main i {
  padding: 0;
  margin: 0;
  color: white;
}

.media-footer .media__action--main:hover {
  opacity: 0.5;
}

.embed-content iframe {
  display: block;
  width: 100%;
}

/*# sourceMappingURL=data:application/json;base64, */
